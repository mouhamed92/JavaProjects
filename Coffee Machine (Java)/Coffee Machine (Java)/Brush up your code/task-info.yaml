type: edu
files:
- name: src/machine/CoffeeMachine.java
  visible: true
  text: |
    package machine;

    public class CoffeeMachine {
        public static void main(String[] args) {
            System.out.println("Hello World!");
        }
    }
  learner_created: false
- name: test/CoffeeMachineTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;

    import java.util.ArrayList;
    import java.util.List;


    class TestClue {
        int water;
        int milk;
        int beans;
        int cups;
        int money;
        String feedback;
        TestClue(int w, int m, int b, int c, int mo, String feedback) {
            water = w;
            milk = m;
            beans = b;
            cups = c;
            money = mo;
            this.feedback = feedback;
        }
    }

    public class CoffeeMachineTest extends StageTest<TestClue> {

        @Override
        public List<TestCase<TestClue>> generate() {
            return List.of(
                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        700 - 400,
                        390 - 540,
                        80 - 120 ,
                        7 - 9,
                        0 - 550,
                        "This test is exactly " +
                            "like in the example - try to run it by yourself"))
                    .setInput(
                        "remaining\n" +
                            "buy\n" +
                            "2\n" +
                            "buy\n" +
                            "2\n" +
                            "fill\n" +
                            "1000\n" +
                            "0\n" +
                            "0\n" +
                            "0\n" +
                            "buy\n" +
                            "2\n" +
                            "take\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        3000,
                        3000,
                        3000 ,
                        3000,
                        0,
                        "This test checks \"fill\" action"))
                    .setInput(
                        "remaining\n" +
                            "fill\n" +
                            "3000\n" +
                            "3000\n" +
                            "3000\n" +
                            "3000\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        -250,
                        0,
                        -16 ,
                        -1,
                        4, "This test checks \"buy\" " +
                        "action with the first variant of coffee"))
                    .setInput(
                        "remaining\n" +
                            "buy\n" +
                            "1\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        -350,
                        -75,
                        -20 ,
                        -1,
                        7, "This test checks \"buy\" " +
                        "action with the second variant of coffee"))
                    .setInput(
                        "remaining\n" +
                            "buy\n" +
                            "2\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        -200,
                        -100,
                        -12 ,
                        -1,
                        6, "This test checks \"buy\" " +
                        "action with the third variant of coffee"))
                    .setInput(
                        "remaining\n" +
                            "buy\n" +
                            "3\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        0,
                        0,
                        0 ,
                        0,
                        -550, "This test checks \"take\" action"))
                    .setInput(
                        "remaining\n" +
                            "take\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        0,
                        0,
                        0 ,
                        0,
                        0, "This test checks \"back\" " +
                        "action right after \"buy\" action"))
                    .setInput(
                        "remaining\n" +
                            "buy\n" +
                            "back\n" +
                            "remaining\n" +
                            "exit\n")
            );
        }

        @Override
        public CheckResult check(String reply, TestClue clue) {
            String[] lines = reply.split("\\n");

            if (lines.length <= 1) {
                return CheckResult.wrong("Looks like you didn't print anything!");
            }

            int water_ = clue.water;
            int milk_ = clue.milk;
            int beans_ = clue.beans;
            int cups_ = clue.cups;
            int money_ = clue.money;

            List<Integer> milk = new ArrayList<>();
            List<Integer> water = new ArrayList<>();
            List<Integer> beans = new ArrayList<>();
            List<Integer> cups = new ArrayList<>();
            List<Integer> money = new ArrayList<>();

            for (String line : lines) {
                line = line.replace("$", "").trim();
                String[] words = line.split("\\s+");
                if (words.length == 0) {
                    continue;
                }
                String firstWord = words[0];
                int amount;
                try {
                    amount = Integer.parseInt(firstWord);
                }
                catch (Exception e) {
                    continue;
                }
                if (line.contains("milk")) {
                    milk.add(amount);
                }
                else if (line.contains("water")) {
                    water.add(amount);
                }
                else if (line.contains("beans")) {
                    beans.add(amount);
                }
                else if (line.contains("cups")) {
                    cups.add(amount);
                }
                else if (line.contains("money")) {
                    money.add(amount);
                }
            }

            if (milk.size() != 2) {
                return new CheckResult(false,
                    "There should be two lines with \"milk\", " +
                        "found: " + milk.size());
            }

            if (water.size() != 2) {
                return new CheckResult(false,
                    "There should be two lines with \"water\", " +
                        "found: " + water.size());
            }

            if (beans.size() != 2) {
                return new CheckResult(false,
                    "There should be two lines with \"beans\", " +
                        "found: " + beans.size());
            }

            if (cups.size() != 2) {
                return new CheckResult(false,
                    "There should be two lines with \"cups\", " +
                        "found: " + cups.size());
            }

            if (money.size() != 2) {
                return new CheckResult(false,
                    "There should be two lines with \"money\", " +
                        "found: " + money.size());
            }

            int milk0 = milk.get(0);
            int milk1 = milk.get(milk.size() - 1);

            int water0 = water.get(0);
            int water1 = water.get(water.size() - 1);

            int beans0 = beans.get(0);
            int beans1 = beans.get(beans.size() - 1);

            int cups0 = cups.get(0);
            int cups1 = cups.get(cups.size() - 1);

            int money0 = money.get(0);
            int money1 = money.get(money.size() - 1);

            int diffWater = water1 - water0;
            int diffMilk = milk1 - milk0;
            int diffBeans = beans1 - beans0;
            int diffCups = cups1 - cups0;
            int diffMoney = money1 - money0;

            boolean isCorrect =
                diffWater == water_ &&
                    diffMilk == milk_ &&
                    diffBeans == beans_ &&
                    diffCups == cups_ &&
                    diffMoney == money_;

            return new CheckResult(isCorrect, clue.feedback);
        }
    }
  learner_created: false
- name: src/machine/Take.java
  visible: true
  text: |
    package machine;

    public class Take {

        Display display = new Display();
        public Take() {
        }

        public void takeMoney(int water,int milk,int coffeeBeans, int disposableCups,int money){
             System.out.println("I gave you $"+money);
             money = 0 ;

             display.dispplayState(water,milk,coffeeBeans,disposableCups,money);

        }
    }
  learner_created: true
- name: src/machine/Fill.java
  visible: true
  text: |
    package machine;

    import java.util.Scanner;

    public class Fill {
        Scanner sc = new Scanner(System.in);
        Display display = new Display();
        public Fill() {

        }
        public void fillMachine(int water,int milk,int coffeeBeans,int disposableCups,int money){

            System.out.println("Write how many ml of water you want to add: ");
            water += sc.nextInt();

            System.out.println("Write how many ml of milk you want to add: ");
            milk += sc.nextInt();

            System.out.println("Write how many grams of coffee beans you want to add: ");
            coffeeBeans += sc.nextInt();

            System.out.println("Write how many disposable cups you want to add: ");
            disposableCups += sc.nextInt();

            display.dispplayState(water,milk,coffeeBeans,disposableCups,money);
        }




    }
  learner_created: true
- name: src/machine/Buy.java
  visible: true
  text: |
    package machine;

    import java.util.Scanner;

    public class Buy {

        Scanner sc = new Scanner(System.in);
        Display display = new Display();
        public Buy() {
        }

        public void buyCoffe(int water,int milk,int coffeeBeans,int disposableCups,int money){

            System.out.println("What do you want to buy? 1 - espresso, 2 - latte, 3 - cappuccino: ");
            int coffeType = sc.nextInt();

            switch (coffeType){
                case 1: // espresso
                    water -= 250;
                    coffeeBeans -= 16;
                    disposableCups-= 1;
                    money += 4;
                    break;
                case 2: // latte
                    water -= 350;
                    milk -= 75;
                    coffeeBeans -= 20;
                    disposableCups -= 1;
                    money += 7;
                    break;
                case 3: // cappuccino
                    water -= 200;
                    milk -= 100;
                    coffeeBeans -= 12;
                    disposableCups -= 1;
                    money += 6;
                    break;
                default:
                    System.out.println("Unknown coffee type");
                    break;
            }

            display.dispplayState(water,milk,coffeeBeans,disposableCups,money);
        }
    }
  learner_created: true
- name: src/machine/Coffe.java
  visible: true
  text: |
    package machine;

    import java.util.*;

    public class Coffe {

        int water;
        int milk;
        int beans;
        int cups ;
        Scanner sc = new Scanner(System.in);

        public Coffe(int water, int milk, int beans, int cups) {
            this.water = water;
            this.milk = milk;
            this.beans = beans;
            this.cups = cups;
        }

        public  Coffe(){}

        public int water(){
           System.out.println("Write how many ml of water the coffee machine has:");
           return water = sc.nextInt();}
        public int milk(){
           System.out.println(" Write how many ml of milk the coffee machine has:");
           return milk = sc.nextInt();}

        public int beans(){
           System.out.println("Write how many grams of coffee beans the coffee machine has:");
           return beans = sc.nextInt() ;}

        public int cups(){
           System.out.println("Write how many cups of coffee you will need:");
           return  cups = sc.nextInt();}


        public void servingNum(int w, int m, int b, int c){

            int waterP = w  / 200 ;
            int milkP = m /  50;
            int beansP = b / 15 ;
            int min = Math.min(waterP, Math.min(milkP, beansP));

                if (min == 0 ){
                System.out.println("No, I can make only 0 cup(s) of coffee");
            }
                if (min == c){
                System.out.println("Yes, I can make that amount of coffee");
            }
                if (min<c){
                    System.out.println("No, I can make only "+ min +" cup(s) of coffee");
                }
                if (min>c){
                    System.out.println("Yes, I can make that amount of coffee (and even "+(min - cups)+" more than that)");
                }
        }

    }
  learner_created: true
- name: src/machine/Display.java
  visible: true
  text: |
    package machine;

    import java.util.Scanner;

    public class Display {

        Scanner sc = new Scanner(System.in);

        public void dispplayState(int water,int milk,int coffeeBeans, int disposableCups,int money){

            String formattedString = String.format("The coffee machine has:%n" +
                    "%d ml of water%n" +
                    "%d ml of milk%n" +
                    "%d g of coffee beans%n" +
                    "%d disposable cups%n" +
                    "$%d of money", water, milk, coffeeBeans, disposableCups, money);

            System.out.println(formattedString);
        }

        public String displayMenu(){

            String choice ;
            System.out.println("Write action (buy, fill, take,exit): ");
            choice  = sc.nextLine();
            return choice ;

        }
    }
  learner_created: true
feedback_link: https://hyperskill.org/learn/step/5334#comment
status: Unchecked
record: 6
